const express = require("express");
const bodyParser = require("body-parser");
const fs = require("fs");
const { exec } = require("child_process");

const app = express();
const PORT = 3000;

app.use(express.static("public")); // Serve HTML/CSS from public/
app.use(bodyParser.urlencoded({ extended: true }));

// Handle POST form submission
app.post("/allocate", (req, res) => {
  const { numTasks, cpu, ram, disk, tasks } = req.body;

  // Build input string for C++ program
  const inputText = `${numTasks}\n${cpu}\n${ram}\n${disk}\n${tasks.trim()}\n`;

  // Save input to input.txt
  fs.writeFileSync("input.txt", inputText);

  // Run the C++ executable (must be precompiled to ./cpp/knapsack)
  exec("./cpp/knapsack", (error, stdout, stderr) => {
    if (error) {
      console.error("Execution error:", error);
      return res.status(500).send("Error running allocation engine.");
    }

    // Read output file generated by knapsack
    const output = fs.readFileSync("output.txt", "utf-8");
    res.send(`<pre>${output}</pre>`);
  });
});

// Start server
app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
